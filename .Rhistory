#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7])
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1;7])
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7])
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000))
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),
labels=lables_pie)
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000))
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7], labels=lables_pie, pos=3, col="red" )
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=c("Referral/Paid Search/Search/Social", "", "", "", "Direct", "Organic Search"),
pos=3, col="red" )
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000))
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=c("Referral/Paid Search/Search/Social", "", "", "", "Direct", "Organic Search"),
pos=3, col="red" )
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000))
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=lables_pie, pos=3, col="red" )
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=lables_pie, pos=3, col="red", xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels")
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels")
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=lables_pie, pos=3, col="red")
qqline(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7])
#####Transactions and Revenues by channels
trans_rev <- qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels")
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=lables_pie, pos=3, col="red")
qqline(trans_rev)
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=lables_pie, pos=3, col="red", add.line=TRUE)
#####Transactions and Revenues by channels
trans_rev <- qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels", add.line=TRUE)
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=lables_pie, pos=3, col="red")
qqline(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7])
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels", add.line=TRUE,
col=c("red","yellow","black","green", "black","black","black"))
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels", add.line=TRUE,
col=c("red","yellow","black","green", "purple","orange","blue"))
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=lables_pie, pos=3, col="red")
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),xlim=(0,30)
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels", add.line=TRUE,
col=c("red","yellow","black","green", "purple","orange","blue"))
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),xlim=(0,30),
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels", add.line=TRUE,
col=c("red","yellow","black","green", "purple","orange","blue"))
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),xlim=c(0,30),
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels", add.line=TRUE,
col=c("red","yellow","black","green", "purple","orange","blue"))
text(x=traffic_source$Transactions[1:7], y=traffic_source$Revenue[1:7],
labels=lables_pie, pos=3, col="red")
#####Transactions and Revenues by channels
qqplot(traffic_source$Transactions[1:7], traffic_source$Revenue[1:7], ylim=c(0,2000),xlim=c(0,30),
xlab="Number of Transactions", ylab="Revenues", main="Transactions and Revenus by channels", add.line=TRUE,
col=c("red","yellow","black","green", "purple","orange","blue"), labels=traffic_source$Revenue[1:7])
#####Pages per session
qqplot(traffic_source$Pages...Session[1:7])
#####Pages per session
qqplot(traffic_source$Default.Channel.Grouping[1:7],traffic_source$Pages...Session[1:7])
text(x=traffic_source$Default.Channel.Grouping[1:7],y=traffic_source$Pages...Session[1:7],
labels = traffic_source$Pages...Session[1:7], col='red')
text(x=traffic_source$Default.Channel.Grouping[1:7],y=traffic_source$Pages...Session[1:7],
labels = traffic_source$Pages...Session[1:7], col='red', pos=3)
qqplot(traffic_source$Default.Channel.Grouping[1:7],traffic_source$Pages...Session[1:7])
text(x=traffic_source$Default.Channel.Grouping[1:7],y=traffic_source$Pages...Session[1:7],
labels = traffic_source$Pages...Session[1:7], col='red', pos=3)
qqline(x=traffic_source$Default.Channel.Grouping[1:7],y=traffic_source$Pages...Session[1:7])
qqplot(traffic_source$Default.Channel.Grouping[1:7],traffic_source$Pages...Session[1:7])
text(x=traffic_source$Default.Channel.Grouping[1:7],y=traffic_source$Pages...Session[1:7],
labels = traffic_source$Pages...Session[1:7], col='red', pos=3)
abline(x=traffic_source$Default.Channel.Grouping[1:7],y=traffic_source$Pages...Session[1:7])
qqplot(traffic_source$Default.Channel.Grouping[1:7],traffic_source$Pages...Session[1:7])
text(x=traffic_source$Default.Channel.Grouping[1:7],y=traffic_source$Pages...Session[1:7],
labels = traffic_source$Pages...Session[1:7], col='red', pos=2)
##################User Age####################
user_age <- read.xls("/Users/VickyWu/Desktop/R datasets/Web Analytics Mockup Raw Data .xlsx",
sheet=3)
user_age
str(user_age)
#Users by age
slices_2 <- user_age$Age
pie(slices_2)
#Users by age
slices_2 <- user_age$Users
pie(slices_2)
labels_2 <- user_age$Age
pie(slices_2, labels=labels_2)
View(user_age)
#Users by age
slices_2 <- user_age$Users[1:6]
labels_2 <- user_age$Age[1:6]
pie(slices_2, labels=labels_2)
pie(slices_2, labels=labels_2, col=c("peachpuff1","peachpuff2","peachpuff3","peachpuff4",p"eru,pink"),
main="Users by age")
pie(slices_2, labels=labels_2, col=c("peachpuff1","peachpuff2","peachpuff3","peachpuff4","peru","pink"),
main="Users by age")
pie(slices_2, labels=sprintf("%s = %.0f%%",labels_2,100*slices_2/7600), col=c("peachpuff1","peachpuff2","peachpuff3","peachpuff4","peru","pink"),
main="Users by age")
##################User Gender####################
user_gender <- read.xls("/Users/VickyWu/Desktop/R datasets/Web Analytics Mockup Raw Data .xlsx",
sheet=4)
user_gender
str(user_gender)
Gender_plot <- barplot(user_gender$Users[1:2] names.arg=user_gender$Gender[1:2], col=c("blue3", "pink4"),
main="Users by gender", ylab="Number of users/visitors")
Gender_plot <- barplot(user_gender$Users[1:2], names.arg=user_gender$Gender[1:2], col=c("blue3", "pink4"),
main="Users by gender", ylab="Number of users/visitors")
text(x=names.arg=user_gender$Gender[1:2], y=user_gender$Users[1:2], labels=user_gender$Users[1:2],
col="red", pos=3)
text(x=user_gender$Gender[1:2], y=user_gender$Users[1:2], labels=user_gender$Users[1:2],
col="red", pos=3)
Gender_plot <- barplot(user_gender$Users[1:2], names.arg=user_gender$Gender[1:2], col=c("blue1", "pink2"),
main="Users by gender", ylab="Number of users/visitors", ylim=(0,5200))
Gender_plot <- barplot(user_gender$Users[1:2], names.arg=user_gender$Gender[1:2], col=c("blue1", "pink2"),
main="Users by gender", ylab="Number of users/visitors", ylim=c(0,5200))
text(x=user_gender$Gender[1:2], y=user_gender$Users[1:2], labels=user_gender$Users[1:2],
col="red", pos=3)
Gender_plot <- barplot(user_gender$Users[1:2], names.arg=user_gender$Gender[1:2], col=c("blue1", "pink2"),
main="Users by gender", ylab="Number of users/visitors", ylim=c(0,5500))
text(x=user_gender$Gender[1:2], y=user_gender$Users[1:2], labels=user_gender$Users[1:2],
col="red", pos=3)
Gender_plot <- barplot(user_gender$Users[1:2], names.arg=user_gender$Gender[1:2], col=c("blue1", "pink2"), ylim=c(0,6000)
main="Users by gender", ylab="Number of users/visitors")
Gender_plot <- barplot(user_gender$Users[1:2], names.arg=user_gender$Gender[1:2], col=c("blue1", "pink2"), ylim=c(0,6000)
,main="Users by gender", ylab="Number of users/visitors")
text(x=user_gender$Gender[1:2], y=user_gender$Users[1:2], labels=user_gender$Users[1:2],
col="red", pos=3)
View(`User Gender`)
text(x=user_gender$Gender[1:2], y=user_gender$Users[1:2], labels=user_gender$Users[1:2],
col="red", pos=2)
Gender_plot <- barplot(user_gender$Users[1:2], names.arg=user_gender$Gender[1:2], col=c("blue1", "pink2"), ylim=c(0,6000)
,main="Users by gender", ylab="Number of users/visitors")
text(Gender_plot, y=user_gender$Users[1:2], labels=user_gender$Users[1:2],
col="red", pos=2)
Gender_plot <- barplot(user_gender$Users[1:2], names.arg=user_gender$Gender[1:2], col=c("blue1", "pink2"), ylim=c(0,6000)
,main="Users by gender", ylab="Number of users/visitors")
text(Gender_plot, y=user_gender$Users[1:2], labels=user_gender$Users[1:2],
col="red", pos=3)
##################Device Usage####################
device_usage <- read.xls("/Users/VickyWu/Desktop/R datasets/Web Analytics Mockup Raw Data .xlsx",
sheet=5)
str(device_usage)
View(device_usage)
by(device_usage$Users+device_usage$New.Users,device_usage$Device.Category, summary)
by(device_usage$Users+device_usage$New.Users,device_usage$Device.Category, counts)
?as.matrix()
as.matrix(device_usage[,1:3])
as.matrix(device_usage[,2:3], rownames=device_usage$Device.Category)
as.matrix(device_usage[,2:3], rownames=c("Desktop", "Mobile", "Tablet", "Total"))
as.matrix(device_usage[,1:3])
slices_3 <- device_usage$Users[1:3]
labels_users <- device_usage$Device.Category[1:3]
device_pie<-pie3D(slices_3, labels=sprintf("%s = %.0f%%", lables_users,
100*slices_3/14981), col=c("grey", "black","white"),
main="Traffic by devices", explode=0.1,cex=0.5)
device_pie<-pie3D(slices_3, labels=sprintf("%s = %.0f%%", labels_users,
100*slices_3/14981), col=c("grey", "black","white"),
main="Traffic by devices")
device_pie<-pie3D(slices_3, labels=sprintf("%s = %.0f%%", labels_users,
100*slices_3/14981), col=c("grey", "blue2","white"),
main="Traffic by devices")
#################Referral website#############
referral < read.xls("/Users/VickyWu/Desktop/R datasets/Web Analytics Mockup Raw Data .xlsx",
sheet=2)
#################Referral website#############
referral <- read.xls("/Users/VickyWu/Desktop/R datasets/Web Analytics Mockup Raw Data .xlsx",
sheet=2)
referral
ref_bounce_rate <- referral$Bounce.Rate[1:10]
ref_bounce_rate
str(referral)
ref_bounce_rate <- as.numeric(sub("%","",referral$Bounce.Rate))/100
ref_bounce_rate
qqplot(x=referral$Source...Medium[1:10], y=ref_bounce_rate)
scatterpot(ref_bounce_rate~referral$Source...Medium[1:10], data=referral[1:10])
library(car)
scatterpot(ref_bounce_rate~referral$Source...Medium[1:10], data=referral[1:10])
scatterplot(ref_bounce_rate~referral$Source...Medium[1:10], data=referral[1:10])
scatterplot(ref_bounce_rate~referral[1:10]$Source...Medium[1:10], data=referral[1:10])
scatterplot(ref_bounce_rate~referral[1:10]~referral$Source...Medium[1:10], data=referral[1:10])
scatterplot(ref_bounce_rate~referral[1:10], data=referral[1:10])
View(referral)
str(referral)
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10])
referral$Bounce.Rate <- as.numeric(sub("%","",referral$Bounce.Rate))/100
str(referral)
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10])
?scatterplot()
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10],regLine=FALSE)
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10],regLine=FALSE,
smooth=FALSE)
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10],
smooth=FALSE)
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10],
smooth=FALSE,xlab="pages per session", ylab="bounce rate", main="Bounce rate ~ Pages per session",
col=rainbow(11))
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10],
smooth=FALSE,xlab="pages per session", ylab="bounce rate", main="Bounce rate ~ Pages per session",
col=heat.colors(11))
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10],
smooth=FALSE,xlab="pages per session", ylab="bounce rate", main="Bounce rate ~ Pages per session",
col=heat.colors(11), labels=ref_bounce_rate)
scatterplot(referral$Bounce.Rate~referral$Pages...Session, data=referral[1:10],
smooth=FALSE,xlab="pages per session", ylab="bounce rate", main="Bounce rate ~ Pages per session",
col=heat.colors(11))
###############Mobile Devices################
mobile <- read.xls("/Users/VickyWu/Desktop/R datasets/Web Analytics Mockup Raw Data .xlsx",
sheet=6)
str(mobile)
View(mobile)
counts_mobile <- t(as.matrix(mobile[,2:3], row.names=mobile$Mobile.Device.Info))
counts
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", ylim=c(0,4500))
my_vector_3 <- c(8876,7490, 2646,2201, 2592,1418, 1309,1003,  152,135,63,26,59,44,15697,12317)
text(x=Com_plot_mobile, y=counts_mobile, labels=my_vector_3, pos=3, col="lightpink3")
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,20),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,50),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,80),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,50),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,40),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,100),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,10),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,50),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,30),ylim=c(0,4500))
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month", xlim=c(0,30),ylim=c(0,4500), cex.names = 0.5)
Com_plot_mobile <- barplot(counts_mobile, beside=TRUE, names.arg = mobile$Mobile.Device.Info,
col=c("lightcyan2", "lemonchiffon"), main="Users vs New Users by mobile devices",
ylab="users per month",ylim=c(0,4500), cex.names = 0.5)
text(x=Com_plot_mobile, y=counts_mobile, labels=my_vector_3, pos=3, col="lightpink3")
#####Pages per session
qqplot(traffic_source$Default.Channel.Grouping[1:7],traffic_source$Pages...Session[1:7])
#####Pages per session
pps_traffic_source <- qqplot(traffic_source$Default.Channel.Grouping[1:7],
traffic_source$Pages...Session[1:7])
qqline(pps_traffic_source)
qqline(traffic_source$Pages...Session[1:7], col="red")
qqline(x=traffic_source$Default.Channel.Grouping[1:7],y=traffic_source$Pages...Session[1:7], col="red")
qqline(x=c(1:9),y=traffic_source$Pages...Session[1:7], col="red")
qqline(x=c(1,9),y=traffic_source$Pages...Session[1:7], col="red")
qqline(x=c(1:9),y=traffic_source$Pages...Session[1:7], col="red")
qqline(x=c(12,3,4,5,6,7,8),y=traffic_source$Pages...Session[1:7], col="red")
qqnorm(traffic_source$Revenue)
qqline(traffic_source$Revenue)
qqline(traffic_source$Revenue, col="red")
qqnorm(traffic_source$Revenue[1:7])
qqnorm(traffic_source$Revenue[1:7], names.arg=traffic_source$Default.Channel.Grouping[1:7])
qqnorm(traffic_source$Pages...Session)
qqline(traffic_source$Pages...Session)
qqline(traffic_source$Pages...Session, col="red")
qqnorm(traffic_source$Pages...Session, ylab="pages per session", main="Pages per session data distribution")
qqline(traffic_source$Pages...Session, col="red")
##############Geo##############
geo <- read.xls("/Users/VickyWu/Desktop/R datasets/Web Analytics Mockup Raw Data .xlsx",
sheet=7)
##############Geo##############
geo <- read.xls("/Users/VickyWu/Desktop/R datasets/Web Analytics Mockup Raw Data .xlsx",
sheet=7)
str(geo)
myCountries = geo$Country
myCountries
library(maptools)
data(wrld_simpl)
plot(wrld_simpl, col = c(gray(.80), "red")[myCountries+1])
myCountries = as.character(geo$Country)
myCountries
plot(wrld_simpl, col = c(gray(.80), "red")[myCountries+1])
Countries = as.character(geo$Country)[1:10]
Countries
myCountries = wrld_simpl@data$NAME %in% Countries
plot(wrld_simpl, col = c(gray(.80), "red")[myCountries+1])
plot(wrld_simpl, col = c(blue(.80), "red")[myCountries+1])
plot(wrld_simpl, col = c(blue(1), "red")[myCountries+1])
plot(wrld_simpl, col = c("olivedrab3", "red")[myCountries+1])
plot(wrld_simpl, col = c("olivedrab3", "red")[myCountries+1], main="User Location")
View(geo)
#(Method 2)
Revenue_plot<-barplot(traffic_source$Revenue[1:7], names.arg=traffic_source$Default.Channel.Grouping[1:7],
main="Revenues by channesl", ylab="Revenue per month",
ylim=c(0,2000), col="lavender")
#(Method 2)
Revenue_plot<-barplot(traffic_source$Revenue[1:7], names.arg=traffic_source$Default.Channel.Grouping[1:7],
main="Revenues by channesl", ylab="Revenue per month",
ylim=c(0,2000), col="lavender",cex.names=0.5)
text(x=Revenue_plot, y=traffic_source$Revenue[1:7], labels=traffic_source$Revenue[1:7],
pos=3, col="maroon")
#(Method 2)
Revenue_plot<-barplot(traffic_source$Revenue[1:7], names.arg=traffic_source$Default.Channel.Grouping[1:7],
main="Revenues by channesl", ylab="Revenue per month (US dollars)",
ylim=c(0,2000), col="lavender",cex.names=0.5)
text(x=Revenue_plot, y=traffic_source$Revenue[1:7], labels=traffic_source$Revenue[1:7],
pos=3, col="maroon")
?hist()
hist(x=Revenue_plot, y=traffic_source$Revenue[1:7])
Revenue_plot<-barplot(traffic_source$Revenue[1:7], names.arg=traffic_source$Default.Channel.Grouping[1:7],
main="Revenues by channesl", ylab="Revenue per month (US dollars)",
ylim=c(0,2000), col="lavender",cex.names=0.5)
text(x=Revenue_plot, y=traffic_source$Revenue[1:7], labels=traffic_source$Revenue[1:7],
pos=3, col="maroon")
hist(~Revenue|Default.Channel.Grouping, data=traffic_source[1:7])
str(traffic_source)
prop.table(table(seg.df$subscribe, seg.df$Segment), margin=2)
View(seg.df)
histogram(~subscribe|Segment, data=seg.df)
barchart(income~Segment, data=seg.mean, col="grey")
barchart(income~Segment, data=seg.income.agg, groups=ownHome)
histogram(~subscribe|Segment+ownHome, data=seg.df)
hist(~Revenue|Default.Channel.Grouping, data=traffic_source[1:7])
library(lattice)
histogram(~Revenue|Default.Channel.Grouping, data=traffic_source[1:7])
str(traffic_source)
histogram(~Revenue|Default.Channel.Grouping, data=traffic_source)
histogram(~Revenue|Default.Channel.Grouping, data=traffic_source, freq=TRUE)
histogram(Revenue~|Default.Channel.Grouping, data=traffic_source)
histogram(Revenue, data=traffic_source)
histogram(traffic_source$Revenue)
#(Method 2)
Revenue_plot<-barplot(traffic_source$Revenue[1:7], names.arg=traffic_source$Default.Channel.Grouping[1:7],
main="Revenues by channels", ylab="Revenue per month (US dollars)",
ylim=c(0,2000), col="lavender",cex.names=0.5)
text(x=Revenue_plot, y=traffic_source$Revenue[1:7], labels=traffic_source$Revenue[1:7],
pos=3, col="maroon")
str(Listing_Oct)
View(Listing_Oct)
by(list_1$price, list_1$neighbourhood_group_cleansed, summary)
plot(by(list_1$price, list_1$neighbourhood_group_cleansed, mean),xlab="Bronx  Brooklyn  Manhattan  Queens  Staten Island", ylab="average listing price",
col=c("red", "black","green","black","black"), main="Average listing price by borough")
##plot the variances
pca$sdev
barplot(pca.var.perc,mian="Scree Plot", xlab="PCs", ylab="Percentage Variance")
pca.data <- data.frame(X=pca$x[,1], Y=pca$x[,2])
View(Listing_Oct)
str(Listing_Oct)
#fit the data into a more proper model
oneway.test(price ~ neighbourhood_group_cleansed , data=list_1, var.equal=FALSE)
leveneTest(price~room_type, data=list_1) #variances of each room type are not equal
library(car)
leveneTest(price~room_type, data=list_1) #variances of each room type are not equal
######overall review score ratings in each borough
by(list_1$review_scores_rating, list_1$neighbourhood_group_cleansed, mean)
cov(scores.matrix)
library(Hmisc)
res_1 <- rcorr(scores.matrix)
res_1 <- rcorr(scores.matrix)
res_1
res_1$r
flattenCorrMatrix <- function(cormat, pmat) {
ut <- upper.tri(cormat)
data.frame(
row = rownames(cormat)[row(cormat)[ut]],
column = rownames(cormat)[col(cormat)[ut]],
cor  =(cormat)[ut],
p = pmat[ut]
)
}
library(Hmisc)
res_2<-rcorr(scores.matrix)
flattenCorrMatrix(res_2$r, res_2$P)
#examine number of reviws
plot(list_1$number_of_reviews,ylab="number of reviews")
boxplot(list_1$number_of_reviews, main="number of reviews")
mean(list_1$number_of_reviews)
by(list_1,list_1$neighbourhood_group_cleansed,count)
list_1$neighbourhood_group_cleansed
m1 <- lm(price~bathrooms+bedrooms+beds+as.factor(bed_type)+as.factor(accomodates)+
as.factor(room_type)+as.factor(price~neighbourhood_group_cleansed), data=list_1)
m1 <- lm(price~bathrooms+bedrooms+beds+as.factor(bed_type)+as.factor(accommodates)+
as.factor(room_type)+as.factor(price~neighbourhood_group_cleansed), data=list_1)
m1 <- lm(price~bathrooms+bedrooms+beds+as.factor(bed_type)+as.factor(accommodates)+
as.factor(room_type)+as.factor(price~neighbourhood_group_cleansed), data=list_1)
m1 <- lm(price~bathrooms+bedrooms+beds+as.factor(bed_type)+as.factor(accommodates)+
as.factor(room_type)+as.factor(price~neighbourhood_group_cleansed), data=list_1)
m1 <- lm(price~bathrooms+bedrooms+beds+as.factor(bed_type), data=list_1)
summary(m1)
m1 <- lm(price~bathrooms+bedrooms+beds+as.factor(bed_type)+accommodates+
as.factor(room_type)+as.factor(price~neighbourhood_group_cleansed), data=list_1)
View(list_1)
m1 <- lm(price~bathrooms+bedrooms+beds+as.factor(bed_type)+accommodates+
room_type+price~neighbourhood_group_cleansed, data=list_1)
############Multiple Regression Model for review score ratings##############
m_1 <- lm(review_scores_rating~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value, data=list_1)
summary(m_1)
str(list_1)
############Multiple Regression Model for review score ratings##############
m_1 <- lm(review_scores_rating~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value
+ as.factor(host_response_time) + as.factor(host_is_superhost) + as.factor(neighbourhood_group_cleansed)
+ as.factor(cancellation_policy)+as.factor(instant_bookable), data=list_1)
summary(m_1)
############HLM Model###########
library(lme4)
ratings.hlm1 <- lmer(review_scores_rating~review_scores_accuracy+review_scores_cleanliness
+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location
+review_scores_value+
(1| host_id),
data=list_1)
summary(ratings.hlm1)
m_3 <- lm(log(review_scores_rating)~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value, data=list_1)
summary(m_3)
############         Multiple Regression Model for review score ratings         ##############
m_1 <- lm(review_scores_rating~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value
+as.factor(listing_id)+as.factor(host_id)+as.factor(host_name)+as.factor(host_response_time)
+as.factor(host_response_rate)+as.factor(host_is_superhost)+as.factor(host_listings_count)
+ as.factor(neighbourhood_group_cleansed) +as.factor(zipcode) +as.factor(latitude)+as.factor(longitude)
+as.factor(property_type)+as.factor(room_type)+as.factor(accommodates)+as.factor(bathrooms)+as.factor(bedrooms)
+as.factor(beds)+as.factor(bed_type)+as.factor(price)+as.factor(cleaning_fee)+as.factor(minimum_nights)+as.factor(availability_30)
+as.factor(number_of_reviews)+as.factor(instant_bookable)
+ as.factor(cancellation_policy)+as.factor(instant_bookable)+as.factor(reviews_per_month), data=list_1)
############         Multiple Regression Model for review score ratings         ##############
m_1 <- lm(review_scores_rating~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value
+as.factor(listing_id)+as.factor(host_id)+as.factor(host_name)+as.factor(host_response_time)
+as.factor(host_response_rate)+as.factor(host_is_superhost)+as.factor(host_listings_count)
+ as.factor(neighbourhood_group_cleansed) +as.factor(zipcode) +as.factor(latitude)+as.factor(longitude)
+as.factor(property_type)+as.factor(room_type)+as.factor(accommodates)+as.factor(bathrooms)+as.factor(bedrooms)
+as.factor(beds)+as.factor(bed_type)+as.factor(price)+as.factor(cleaning_fee)+as.factor(minimum_nights)+as.factor(availability_30)
+as.factor(number_of_reviews)+as.factor(instant_bookable)
+ as.factor(cancellation_policy)+as.factor(instant_bookable)+as.factor(reviews_per_month), data=list_1)
############         Multiple Regression Model for review score ratings         ##############
m_1 <- lm(review_scores_rating~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value
+as.factor(listing_id)+as.factor(host_id)+as.factor(host_name)+as.factor(host_response_time)
+as.factor(host_response_rate)+as.factor(host_is_superhost)+as.factor(host_listings_count)
+ as.factor(neighbourhood_group_cleansed) +as.factor(zipcode) +as.factor(latitude)+as.factor(longitude)
+as.factor(property_type)+as.factor(room_type)+as.factor(accommodates)+as.factor(bathrooms)+as.factor(bedrooms)
+as.factor(beds)+as.factor(bed_type)+as.factor(price)+as.factor(cleaning_fee)+as.factor(minimum_nights)+as.factor(availability_30)
+as.factor(number_of_reviews)+as.factor(instant_bookable)
+ as.factor(cancellation_policy)+as.factor(instant_bookable)+as.factor(reviews_per_month), data=list_1)
Sys.setenv('R_MAX_VSIZE'=32000000000)
Sys.getenv('R_MAX_VSIZE'
Sys.getenv('R_MAX_VSIZE')
Sys.getenv('R_MAX_VSIZE')
############         Multiple Regression Model for review score ratings         ##############
m_1 <- lm(review_scores_rating~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value
+as.factor(listing_id)+as.factor(host_id)+as.factor(host_name)+as.factor(host_response_time)
+as.factor(host_response_rate)+as.factor(host_is_superhost)+as.factor(host_listings_count)
+ as.factor(neighbourhood_group_cleansed) +as.factor(zipcode) +as.factor(latitude)+as.factor(longitude)
+as.factor(property_type)+as.factor(room_type)+as.factor(accommodates)+as.factor(bathrooms)+as.factor(bedrooms)
+as.factor(beds)+as.factor(bed_type)+as.factor(price)+as.factor(cleaning_fee)+as.factor(minimum_nights)+as.factor(availability_30)
+as.factor(number_of_reviews)+as.factor(instant_bookable)
+ as.factor(cancellation_policy)+as.factor(instant_bookable)+as.factor(reviews_per_month), data=list_1)
Sys.getenv('R_MAX_VSIZE')
Sys.setenv('R_MAX_VSIZE'=60000000000)
Sys.getenv('R_MAX_VSIZE')
############         Multiple Regression Model for review score ratings         ##############
m_1 <- lm(review_scores_rating~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value
+as.factor(listing_id)+as.factor(host_id)+as.factor(host_name)+as.factor(host_response_time)
+as.factor(host_response_rate)+as.factor(host_is_superhost)+as.factor(host_listings_count)
+ as.factor(neighbourhood_group_cleansed) +as.factor(zipcode) +as.factor(latitude)+as.factor(longitude)
+as.factor(property_type)+as.factor(room_type)+as.factor(accommodates)+as.factor(bathrooms)+as.factor(bedrooms)
+as.factor(beds)+as.factor(bed_type)+as.factor(price)+as.factor(cleaning_fee)+as.factor(minimum_nights)+as.factor(availability_30)
+as.factor(number_of_reviews)+as.factor(instant_bookable)
+ as.factor(cancellation_policy)+as.factor(instant_bookable)+as.factor(reviews_per_month), data=list_1)
Sys.setenv('R_MAX_VSIZE'=32000000000)
############         Multiple Regression Model for review score ratings         ##############
m_1 <- lm(review_scores_rating~review_scores_accuracy+review_scores_cleanliness+review_scores_accuracy+review_scores_checkin
+review_scores_communication+review_scores_location+review_scores_value
+as.factor(listing_id)+as.factor(host_id)+as.factor(host_name)+as.factor(host_response_time)
+as.factor(host_response_rate)+as.factor(host_is_superhost)+as.factor(host_listings_count)
+ as.factor(neighbourhood_group_cleansed) +as.factor(zipcode) +as.factor(latitude)+as.factor(longitude)
+as.factor(property_type)+as.factor(room_type)+as.factor(accommodates)+as.factor(bathrooms)+as.factor(bedrooms)
+as.factor(beds)+as.factor(bed_type)+as.factor(price)+as.factor(cleaning_fee)+as.factor(minimum_nights)+as.factor(availability_30)
+as.factor(number_of_reviews)+as.factor(instant_bookable)
+ as.factor(cancellation_policy)+as.factor(instant_bookable)+as.factor(reviews_per_month), data=list_1)
